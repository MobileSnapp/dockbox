version: '2'

services:

    ### Application ###
    data:
        image: busybox:latest
        container_name: dockbox-data
        volumes:
            - ..:/var/www/site
        networks:
            - dockbox-net


    ### NGINX ###
    nginx:
        build:
          context: ./nginx
          dockerfile: Dockerfile
        container_name: dockbox-nginx
        volumes_from:
            - data
        volumes:
            - log-data:/var/log/nginx
        ports:
            - "80:80"
            - "443:443"
        networks:
            - dockbox-net


    ### Apache ###
    apache:
        build:
          context: ./apache
          dockerfile: Dockerfile
        container_name: dockbox-apache
        volumes_from:
            - data
        volumes:
            - log-data:/var/log/apache2
        ports:
            - "80:80"
        networks:
            - dockbox-net


    ### HHVM ###
    hhvm:
        build:
          context: ./hhvm
          dockerfile: Dockerfile
        container_name: dockbox-hhvm
        volumes_from:
            - data
        ports:
            - "8000:80"
        networks:
            - dockbox-net


    ### MariaDB ###
    mariadb:
        image: mariadb:latest
        container_name: dockbox-mariadb
        volumes:
            - database-data:/var/lib/mysql
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: sitemariadb
            MYSQL_USER: sitedb_user
            MYSQL_PASSWORD: sitedbsecret
            MYSQL_ROOT_PASSWORD: root
        networks:
            - dockbox-net


    ### MySQL ###
    mysql:
        image: mysql:latest
        container_name: dockbox-mysql
        volumes:
            - database-data:/var/lib/mysql
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: sitemysqldb
            MYSQL_USER: sitedb_user
            MYSQL_PASSWORD: sitedbsecret
            MYSQL_ROOT_PASSWORD: root
        networks:
            - dockbox-net


    ### PostgreSQL ###
    postgres:
        image: postgres:alpine
        container_name: dockbox-postgres
        volumes:
            - database-data:/var/lib/postgres
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: sitepostgresdb
            POSTGRES_USER: sitedb_user
            POSTGRES_PASSWORD: sitedbsecret
        links:
            - pgadmin
        networks:
            - dockbox-net


    ### Mongo ###
    mongo:
        image: mongo:latest
        container_name: dockbox-mongo
        volumes:
            - mongo-data:/data/db
        ports:
            - "27017:27017"
        networks:
            - dockbox-net


    ### Minio Cloud Storage ###
    minio:
        image: minio/minio:latest
        container_name: dockbox-minio
        volumes:
            - minio-data:/export
        environment:
            MINIO_ACCESS_KEY: "miniouser"
            MINIO_SECRET_KEY: "miniosecret"
        ports:
            - "9000:9000"
        command: "server /home/shared"
        networks:
            - dockbox-net


    ### RethinkDB ###
    rethinkdb:
        image: rethinkdb:latest
        container_name: dockbox-rethinkdb
        volumes:
            - rethinkdb-data:/data
        ports:
            - "8008:8080"
        networks:
            - dockbox-net


    ### Neo4j ###
    neo4j:
        image: neo4j:latest
        container_name: dockbox-neo4j
        volumes:
            - neo4j-data:/data
        environment:
            - NEO4J_AUTH=neo4j/secret
        ports:
            - "7474:7474"
            - "7687:7687"
        networks:
            - dockbox-net


    ### OrientDB ###
    orientdb:
        image: orientdb:latest
        container_name: dockbox-orientdb
        volumes:
            - orientdb-data:/orientdb/databases
            - orientdb-config:/orientdb/config
            - orientdb-backup:/orientdb/backup
        environment:
            ORIENTDB_ROOT_PASSWORD: root
        ports:
            - "2424:2424"
            - "2480:2480"
        networks:
            - dockbox-net


    ### Redis ###
    redis:
        image: redis:alpine
        container_name: dockbox-redis
        volumes:
            - redis-data:/data
        ports:
            - "6379:6379"
        networks:
            - dockbox-net


    ### Memcached ###
    memcached:
        image: memcached:alpine
        container_name: dockbox-memcached
        ports:
            - "11211:11211"
        networks:
            - dockbox-net


    ### RabbitMQ ###
    rabbitmq:
        image: rabbitmq:alpine
        container_name: dockbox-rabbitmq
        environment:
            RABBITMQ_ERLANG_COOKIE: "DBHUpCzhPaM7"
        ports:
            - "4369:4369"
            - "5671:5671"
            - "5672:5672"
            - "25672:25672"
        links:
            - rabbitmq-manage
        networks:
            - dockbox-net


    ### RabbitMQ Management ###
    rabbitmq-manage:
        image: rabbitmq:management-alpine
        container_name: dockbox-rabbitmq-manage
        environment:
            RABBITMQ_ERLANG_COOKIE: "DBHUpCzhPaM7"
            RABBITMQ_DEFAULT_USER: "mquser"
            RABBITMQ_DEFAULT_PASS: "mqpassword"
            RABBITMQ_DEFAULT_VHOST: "/"
        volumes:
            - rabbitmq-data:/var/lib/rabbitmq
        ports:
            - "15671:15671"
            - "15672:15672"
        networks:
            - dockbox-net


    ### Beanstalkd ###
    beanstalkd:
        build:
          context: ./beanstalkd/queue
          dockerfile: Dockerfile
        container_name: dockbox-beanstalkd
        ports:
            - "11300:11300"
        links:
            - beanstalkd-console
        networks:
            - dockbox-net


    ### Beanstalkd Console ###
    beanstalkd-console:
        build:
          context: ./beanstalkd/console
          dockerfile: Dockerfile
        container_name: dockbox-beanstalkd-console
        environment:
            AUTH: "enable"
            AUTH_USERNAME: "admin"
            AUTH_PASSWORD: "password"
        ports:
            - "2080:2080"
        networks:
            - dockbox-net


    ### Node ###
    node:
        build:
          context: ./node
          dockerfile: Dockerfile
        container_name: dockbox-node
        volumes_from:
            - data
        tty: true
        networks:
            - dockbox-net


    ### Elasticsearch ###
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:5.2.2
        container_name: dockbox-elasticsearch
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
        ports:
            - "9200:9200"
            - "9300:9300"
        networks:
            - dockbox-net


    ### MailHog ###
    mailhog:
        image: mailhog/mailhog:latest
        container_name: dockbox-mailhog
        volumes:
           - mailhog-data:/home/mailhog
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - dockbox-net


    ### Docker Local Registry ###
    docker-registry:
        image: registry:latest
        container_name: dockbox-registry
        volumes:
            - registry-data:/var/lib/registry
        ports:
            - "5000:5000"
        networks:
            - dockbox-net


    ### phpmyadmin [web interface for MySQL and MariaDB] ###
    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        container_name: dockbox-phpmyadmin
        environment:
            PMA_ARBITRARY: 1
            MYSQL_USER: sitedb_user
            MYSQL_PASSWORD: sitedbsecret
            MYSQL_ROOT_PASSWORD: root
        ports:
            - "8080:80"
        links:
            # for mysql container
            - "mysql:db"
            # for mariadb container
            # - "mariadb:db"
        networks:
            - dockbox-net


    ### pgadmin [administration and management tool for PostgreSQL] ###
    pgadmin:
        image: fenglc/pgadmin4:latest
        container_name: dockbox-pgadmin
        ports:
            - "5050:5050"
        networks:
            - dockbox-net


    ### Selenium Hub ###
    selenium-hub:
        image: selenium/hub:latest
        container_name: dockbox-selenium-hub
        privileged: true
        ports:
            - "4444:4444"
        environment:
            - GRID_TIMEOUT=120000
            - GRID_BROWSER_TIMEOUT=120000
        networks:
            - dockbox-net



    ### Selenium Firefox Node ###
    selenium-firefox-node:
        image: selenium/node-firefox:latest
        container_name: dockbox-selenium-firefox-node
        privileged: true
        depends_on:
            - selenium-hub
        ports:
            - 5900
        environment:
            - no_proxy=localhost
            - HUB_PORT_4444_TCP_ADDR=selenium-hub
            - HUB_PORT_4444_TCP_PORT=4444
        networks:
            - dockbox-net


    ### Selenium Chrome Node ###
    selenium-chrome-node:
        image: selenium/node-chrome:latest
        container_name: dockbox-selenium-chrome-node
        privileged: true
        depends_on:
            - selenium-hub
        ports:
            - 5900
        environment:
            - no_proxy=localhost
            - HUB_PORT_4444_TCP_ADDR=selenium-hub
            - HUB_PORT_4444_TCP_PORT=4444
        networks:
            - dockbox-net


networks:

    ### Bridged Network ###
    dockbox-net:
        driver: "bridge"

volumes:

    ### Logging Storage ###
    log-data:
        driver: "local"

    ### Database Storage ###
    database-data:
        driver: "local"

    ### Database Storage ###
    rethinkdb-data:
        driver: "local"

    ### Minio Storage ###
    minio-data:
        driver: "local"

    ### Redis Storage ###
    redis-data:
        driver: "local"

    ### Mongo Storage ###
    mongo-data:
        driver: "local"

    ### Neo4j Storage ###
    neo4j-data:
        driver: "local"

    ### OriendDB Data Storage ###
    orientdb-data:
        driver: "local"

    ### OriendDB Config Storage ###
    orientdb-config:
        driver: "local"

    ### OriendDB Backup Storage ###
    orientdb-backup:
        driver: "local"

    ### RabbitMQ Storage ###
    rabbitmq-data:
        driver: "local"

    ### Elasticsearch Storage ###
    elasticsearch-data:
        driver: "local"

    ### Mailhog Storage ###
    mailhog-data:
        driver: "local"

    ### Registry Storage ###
    registry-data:
        driver: "local"