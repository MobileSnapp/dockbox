version: '2'

services:

    ### Application ###
    data:
        image: busybox:latest
        container_name: dockbox-data
        volumes:
            - ..:/var/www/site
        networks:
            - dockbox-net

    ### NGINX ###
    nginx:
        build:
          context: ./nginx
          dockerfile: Dockerfile
        container_name: dockbox-nginx
        volumes_from:
            - data
        volumes:
            - log-data:/var/log/nginx
        ports:
            - "80:80"
            - "443:443"
        networks:
            - dockbox-net

    ### Apache ###
    apache:
        build:
          context: ./apache
          dockerfile: Dockerfile
        container_name: dockbox-apache
        volumes_from:
            - data
        volumes:
            - log-data:/var/log/apache2
        ports:
            - "80:80"
        networks:
            - dockbox-net

    ### MariaDB ###
    mariadb:
        image: mariadb:latest
        container_name: dockbox-mariadb
        volumes:
            - database-data:/var/lib/mysql
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: sitemariadb
            MYSQL_USER: sitedb_maria_user
            MYSQL_PASSWORD: sitedbsecret
            MYSQL_ROOT_PASSWORD: root
        networks:
            - dockbox-net

    ### MySQL ###
    mysql:
        image: mysql:latest
        container_name: dockbox-mysql
        volumes:
            - database-data:/var/lib/mysql
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: sitemysqldb
            MYSQL_USER: sitedb_mysql_user
            MYSQL_PASSWORD: sitedbsecret
            MYSQL_ROOT_PASSWORD: root
        networks:
            - dockbox-net

    ### PostgreSQL ###
    postgres:
        image: postgres:alpine
        container_name: dockbox-postgres
        volumes:
            - database-data:/var/lib/postgres
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: sitepostgresdb
            POSTGRES_USER: sitedb_postgres_user
            POSTGRES_PASSWORD: sitedbsecret
        networks:
            - dockbox-net


    ### Mongo ###
    mongo:
        image: mongo:latest
        container_name: dockbox-mongo
        volumes:
            - mongo-data:/data/db
        ports:
            - "27017:27017"
        networks:
            - dockbox-net

    ### Redis ###
    redis:
        image: redis:alpine
        container_name: dockbox-redis
        volumes:
            - redis-data:/data
        ports:
            - "6379:6379"
        networks:
            - dockbox-net

    ### Memcached ###
    memcached:
        image: memcached:alpine
        container_name: dockbox-memcached
        ports:
            - "11211:11211"
        networks:
            - dockbox-net

    ### RabbitMQ ###
    rabbitmq:
        image: rabbitmq:alpine
        container_name: dockbox-rabbitmq
        environment:
            RABBITMQ_ERLANG_COOKIE: "DBHUpCzhPaM7"
        ports:
            - "4369:4369"
            - "5671:5671"
            - "5672:5672"
            - "25672:25672"
        links:
            - rabbitmq-manage
        networks:
            - dockbox-net

    ### RabbitMQ Management ###
    rabbitmq-manage:
        image: rabbitmq:management-alpine
        container_name: dockbox-rabbitmq-manage
        environment:
            RABBITMQ_ERLANG_COOKIE: "DBHUpCzhPaM7"
            RABBITMQ_DEFAULT_USER: "mquser"
            RABBITMQ_DEFAULT_PASS: "mqpassword"
            RABBITMQ_DEFAULT_VHOST: "/"
        volumes:
            - rabbitmq-data:/var/lib/rabbitmq
        ports:
            - "15671:15671"
            - "15672:15672"
        networks:
            - dockbox-net

    ### Node ###
    node:
        build:
          context: ./node
          dockerfile: Dockerfile
        container_name: dockbox-node
        volumes_from:
            - data
        tty: true
        networks:
            - dockbox-net

    ### Elasticsearch ###
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:5.2.2
        container_name: dockbox-elasticsearch
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
        ports:
            - "9200:9200"
            - "9300:9300"
        networks:
            - dockbox-net

    ### MailHog ###
    mailhog:
        image: mailhog/mailhog:latest
        container_name: dockbox-mailhog
        volumes:
           - mailhog-data:/home/mailhog
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - dockbox-net

networks:

    ### Bridged Network ###
    dockbox-net:
        driver: "bridge"

volumes:

    ### Logging Storage ###
    log-data:
        driver: "local"

    ### Database Storage ###
    database-data:
        driver: "local"

    ### Redis Storage ###
    redis-data:
        driver: "local"

    ### Mongo Storage ###
    mongo-data:
        driver: "local"

    ### RabbitMQ Storage ###
    rabbitmq-data:
        driver: "local"

    ### Elasticsearch Storage ###
    elasticsearch-data:
        driver: "local"

    ### Mailhog Storage ###
    mailhog-data:
        driver: "local"